{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <ul class=\\\"nav nav-pills\\\">\\n    <li><a routerLinkActive=\\\"active\\\" routerLink=\\\"/home\\\">Home</a></li>\\n    <li><a routerLinkActive=\\\"active\\\" routerLink=\\\"/login\\\">Login</a></li>\\n    <li><a (click)=\\\"logout()\\\">Logout</a></li>\\n  </ul>\\n</div>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\n    this.app.authenticate(undefined, undefined);\n  }\n  logout() {\n    this.http.get('logout', {}).subscribe(() => {\n      this.app.authenticated = false;\n      this.router.navigateByUrl('/login');\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {Injectable, NgModule} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppService } from './app.service';\n\nimport { AppComponent } from './app.component';\nimport {HomeComponent} from './home/home.component';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'home'},\n  { path: 'home', component: HomeComponent},\n  { path: 'login', component: LoginComponent}\n];\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class AppService {\n\n  authenticated = false;\n\n  constructor(private http: HttpClient) {\n  }\n\n  authenticate(credentials, callback) {\n\n    const headers = new HttpHeaders(credentials ? {\n      authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n    } : {});\n\n    this.http.get('user', {headers: headers}).subscribe(response => {\n      if (response['name']) {\n        this.authenticated = true;\n      } else {\n        this.authenticated = false;\n      }\n      return callback && callback();\n    });\n\n  }\n\n}\n","module.exports = \"<h1>Greeting</h1>\\n<div [hidden]=\\\"!authenticated()\\\">\\n  <p>The ID is {{greeting.id}}</p>\\n  <p>The content is {{greeting.content}}</p>\\n</div>\\n<div [hidden]=\\\"authenticated()\\\">\\n  <p>Login to see your greeting</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n\n  title = 'Demo';\n  greeting = {};\n\n  constructor(private app: AppService, private http: HttpClient) {\n    http.get('resource').subscribe(data => this.greeting = data);\n  }\n\n  authenticated() { return this.app.authenticated; }\n\n}\n","module.exports = \"<div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error\\\">\\n  There was a problem logging in. Please try again.\\n</div>\\n<form role=\\\"form\\\" (submit)=\\\"login()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username:</label> <input type=\\\"text\\\"\\n                                                   class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"credentials.username\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password:</label> <input type=\\\"password\\\"\\n                                                   class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\"/>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\n  credentials = {username: '', password: ''};\n\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\n  }\n\n  login() {\n    this.app.authenticate(this.credentials, () => {\n      this.router.navigateByUrl('/');\n    });\n    return false;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}